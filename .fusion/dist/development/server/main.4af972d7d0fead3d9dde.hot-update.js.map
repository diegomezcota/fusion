{"version":3,"file":"main.4af972d7d0fead3d9dde.hot-update.js","sources":["C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\components\\MemeGenerator.js"],"sourcesContent":["import React from 'react'\r\n\r\nclass MemeGenerator extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            topText : \"\",\r\n            bottomText : \"\",\r\n            randomImage : \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs : [],\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(data => data.json())\r\n            .then(response => {\r\n                const {memes} = response.data\r\n                this.setState({allMemeImgs : memes})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.allMemeImgs)\r\n        return (\r\n            <form className=\"meme-form\">\r\n                    {\r\n                        /**\r\n                         * Create 2 input fields, one for the topText and one for the bottomText\r\n                         * Remember that these will be \"controlled forms\", so make sure to add\r\n                         * all the attributes you'll need for that to work\r\n                         */\r\n                    }    \r\n                    <input \r\n                        type='text'\r\n                        name='topText'\r\n                        placeholder='Insert top text'\r\n                        value={this.state.topText}\r\n                    />\r\n                    <br/>\r\n                    <input \r\n                        type='text'\r\n                        name='bottomText'\r\n                        placeholder='Insert bottom text'\r\n                        value={this.state.bottomText}\r\n                    />\r\n                    <br/>\r\n                    <button>Gen</button>\r\n                </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAjDA;AACA;AAkDA;;;;A","sourceRoot":""}