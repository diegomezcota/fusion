{"version":3,"file":"main.e088ac55b898eb402dc2.hot-update.js","sources":["C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\components\\App.js","C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\components\\root.js"],"sourcesContent":["import React, {Component} from \"react\"\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            isFriendly: false,\r\n            gender: \"\",\r\n            favColor: \"blue\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    \r\n    handleChange(event) {\r\n        const {name, value, type, checked} = event.target\r\n        type === \"checkbox\" ? this.setState({ [name]: checked }) : this.setState({ [name]: value })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    value={this.state.firstName} \r\n                    name=\"firstName\" \r\n                    placeholder=\"First Name\" \r\n                    onChange={this.handleChange} \r\n                />\r\n                <br />\r\n                <input  \r\n                    type=\"text\" \r\n                    value={this.state.lastName} \r\n                    name=\"lastName\" \r\n                    placeholder=\"Last Name\" \r\n                    onChange={this.handleChange} \r\n                />\r\n                \r\n                {\r\n                    /**\r\n                     * Other useful form elements:\r\n                     * \r\n                     *  <textarea /> element\r\n                     *  <input type=\"checkbox\" />\r\n                     *  <input type=\"radio\" />\r\n                     *  <select> and <option> elements\r\n                     */\r\n                }\r\n                \r\n                <textarea \r\n                    value={\"Some default value\"}\r\n                    onChange={this.handleChange}\r\n                />\r\n                \r\n                <br />\r\n                \r\n                <label>\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        name=\"isFriendly\"\r\n                        checked={this.state.isFriendly}\r\n                        onChange={this.handleChange}\r\n                    /> Is friendly?\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    <input \r\n                        type=\"radio\" \r\n                        name=\"gender\"\r\n                        value=\"male\"\r\n                        checked={this.state.gender === \"male\"}\r\n                        onChange={this.handleChange}\r\n                    /> Male\r\n                </label>\r\n                <br />\r\n                <label>\r\n                    <input \r\n                        type=\"radio\" \r\n                        name=\"gender\"\r\n                        value=\"female\"\r\n                        checked={this.state.gender === \"female\"}\r\n                        onChange={this.handleChange}\r\n                    /> Female\r\n                </label>\r\n                {/* Formik */}\r\n                <br />\r\n                \r\n                <label>Favorite Color:</label>\r\n                <select \r\n                    value={this.state.favColor}\r\n                    onChange={this.handleChange}\r\n                    name=\"favColor\"\r\n                >\r\n                    <option value=\"blue\">Blue</option>\r\n                    <option value=\"green\">Green</option>\r\n                    <option value=\"red\">Red</option>\r\n                    <option value=\"orange\">Orange</option>\r\n                    <option value=\"yellow\">Yellow</option>\r\n                </select>\r\n                \r\n                <h1>{this.state.firstName} {this.state.lastName}</h1>\r\n                <h2>You are a {this.state.gender}</h2>\r\n                <h2>Your favorite color is {this.state.favColor}</h2>\r\n                <button>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","// import React, {useState, useEffect} from 'react';\r\n// import {Helmet} from 'fusion-plugin-react-helmet-async';\r\n// import fetch from 'isomorphic-fetch';\r\n\r\n// const Root = () => {\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [inputText, setInputText] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     fetch('/api/todos')\r\n//       .then(async res => await res.json())\r\n//       .then(res => setTodos(res));\r\n//   }, []);\r\n\r\n//   const handleOnKeydown = (e) => {\r\n//     if (e.key === 'Enter') {\r\n//       setInputText('');\r\n//       setTodos([\r\n//         ...todos,\r\n//         inputText\r\n//       ]);\r\n//       fetch('/api/todos', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({value: inputText}),\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const handleOnChange = (e) => {\r\n//     setInputText(e.currentTarget.value);\r\n//   };\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//         <Helmet>\r\n//       <style>\r\n//       {`\r\n//         body {\r\n//           background-color: #f5f5f5;\r\n//           font: 24px 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n//         }\r\n//         h1 {\r\n//           color: rgba(175, 47, 47, 0.15);\r\n//           font-size: 100px;\r\n//           font-weight: 100;\r\n//           text-align: center;\r\n//         }\r\n//         .container {\r\n//           background: #ffffff;\r\n//           border: 1px solid #ededed;\r\n//           margin: 0 auto;\r\n//           width: 550px;\r\n//         }\r\n//         input {\r\n//           border: none;\r\n//           font-size: 24px;\r\n//           font-weight: 300;\r\n//           padding: 15px;\r\n//           width: 520px;\r\n//         }\r\n//         input::placeholder {\r\n//           color: #e6e6e6;\r\n//           font-style: italic;\r\n//           font-weight: 100;\r\n//         }\r\n//         .todo {\r\n//           border-top: 1px solid #ededed;\r\n//           padding: 15px;\r\n//         }\r\n//         .todo-text {\r\n//           font-weight: 300;\r\n//         }\r\n//       `}\r\n//       </style>\r\n//     </Helmet>\r\n//       <h1>todos</h1>\r\n//       <div className=\"container\">\r\n//         <input\r\n//           onChange={handleOnChange}\r\n//           onKeyDown={handleOnKeydown}\r\n//           placeholder=\"What needs to be done?\"\r\n//           value={inputText}\r\n//           type=\"text\"\r\n//         />\r\n//         {todos.map(todo => (\r\n//           <div className=\"todo\">\r\n//             <div className=\"todo-text\">{todo}</div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\nimport React from 'react'\r\nimport App from './App'\r\n\r\nfunction Root(){\r\n  return (\r\n    <App />\r\n  )\r\n}\r\n\r\nexport default <Root />;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AA1GA;AACA;AA2GA;;;;;;;;;;;;;;;;;AC9GA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}