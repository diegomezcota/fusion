{"version":3,"file":"client-main.js","sources":["C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\components\\App.js","C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\components\\Header.js","C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\components\\MemeGenerator.js","C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\components\\root.js","C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\main.js","C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\plugins\\todos.js"],"sourcesContent":["import React from 'react'\r\n\r\nimport Header from './Header'\r\nimport MemeGenerator from './MemeGenerator'\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <MemeGenerator />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\n\r\nfunction Header(){\r\n    return (\r\n        <header>\r\n            <img src='http://www.pngall.com/wp-content/uploads/2016/05/Trollface.png'/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nclass MemeGenerator extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            topText : \"\",\r\n            bottomText : \"\",\r\n            randomImg : \"http://i.imgflip.com/1bij.jpg\",\r\n            allMemeImgs : [],\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                const {memes} = response.data \r\n                this.setState({\r\n                    allMemeImgs : memes\r\n                })\r\n            })\r\n    }\r\n\r\n    handleChange(){\r\n        const {name, value} = event.target\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault()\r\n        const index = Math.floor(Math.random() * 100)\r\n        const newUrl = this.state.allMemeImgs[index].url\r\n        this.setState({\r\n            randomImg : newUrl\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"topText\"\r\n                        value={this.state.topText}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"bottomText\"\r\n                        value={this.state.bottomText}\r\n                        onChange={this.handleChange}                    \r\n                    />\r\n                    <button>Gen</button>\r\n                </form>\r\n                <div>\r\n                    <img src={this.state.randomImg}/>\r\n                    <h2>{this.state.topText}</h2>\r\n                    <h2>{this.state.bottomText}</h2>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemeGenerator","import React from 'react'\r\nimport App from './App'\r\n\r\nfunction Root() {\r\n  return (\r\n    <App />\r\n  )\r\n}\r\n\r\nexport default <Root />","import App from 'fusion-react';\r\nimport Root from './components/root';\r\nimport TodosPlugin from './plugins/todos';\r\n// styling\r\nimport HelmetPlugin from 'fusion-plugin-react-helmet-async';\r\n\r\nexport default async function start() {\r\n  const app = new App(Root);\r\n  if (__NODE__) {\r\n    app.middleware(require('koa-bodyparser')());\r\n    app.middleware(TodosPlugin);\r\n  }\r\n  app.register(HelmetPlugin);\r\n  return app;\r\n}","const todos = ['Buy milk', 'Walk dog'];\r\n\r\nexport default async (ctx, next) => {\r\n  if (ctx.path === '/api/todos') {\r\n    if (ctx.method === 'GET') {\r\n      ctx.response.body = todos;\r\n    } else if (ctx.method === 'POST') {\r\n      const {value} = ctx.request.body;\r\n      todos.push(value);\r\n      ctx.response.status = 201;\r\n    }\r\n  }\r\n  await next();\r\n};"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAlEA;AACA;AAmEA;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA,eAGA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;A","sourceRoot":""}