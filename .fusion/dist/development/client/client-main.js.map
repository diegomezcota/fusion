{"version":3,"file":"client-main.js","sources":["C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\components\\App.js","C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\components\\root.js","C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\main.js","C:\\Users\\diego\\OneDrive\\Documentos\\fusionjs\\fusion-tutorial\\src\\plugins\\todos.js"],"sourcesContent":["import React, {Component} from \"react\"\r\n\r\n/**\r\n * Challenge: Wire up the partially-finished travel form so that it works!\r\n * Remember to use the concept of controlled forms\r\n * https://reactjs.org/docs/forms.html\r\n * \r\n * All information should be populating the text below the form in real-time\r\n * as you're filling it out\r\n * \r\n * This exercise is adapted from the V School curriculum on vanilla JS forms:\r\n * https://coursework.vschool.io/travel-form/\r\n * \r\n * All of our challenges and learning resources are open for the public\r\n * to play around with and learn from at https://coursework.vschool.io\r\n */\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            firstName : \"\",\r\n            lastName : \"\",\r\n            Age : \"\",\r\n            gender : \"\",\r\n            location : \"\",\r\n            isVegetarian : false,\r\n            isLactoseIntolerant : false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    \r\n    handleChange(event){\r\n        const {value, name, type, checked} = event.target\r\n        type === 'checkbox' ? this.setState({[name] : checked}) : this.setState({[name] : value})\r\n    }\r\n\r\n    render() {\r\n        let restrictions = []\r\n        if (this.state.isVegetarian) restrictions.push('vegetarian')\r\n        if (this.state.isLactoseIntolerant) restrictions.push('lactose intolerant')\r\n        return (\r\n            <main>\r\n                <form>\r\n                    <input \r\n                        name = \"firstName\" \r\n                        value = {this.state.firstName} \r\n                        placeholder=\"First Name\" \r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <br />\r\n                    <input \r\n                        name = \"lastName\" \r\n                        value = {this.state.lastName} \r\n                        placeholder=\"Last Name\" \r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <br />\r\n                    <input \r\n                        name = \"Age\"\r\n                        value = {this.state.Age}\r\n                        placeholder=\"Age\" \r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <br />\r\n                    \r\n                    {/* Create radio buttons for gender here */}\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        value=\"male\"\r\n                        checked={this.state.gender === 'male'}\r\n                        onChange={this.handleChange}\r\n                    />Male\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        value=\"female\"\r\n                        checked={this.state.gender === 'female'}\r\n                        onChange={this.handleChange}\r\n                    />Female\r\n                    <br />\r\n                    \r\n                    {/* Create select box for location here */}\r\n                    <select\r\n                        value={this.state.location}\r\n                        onChange={this.handleChange}\r\n                        name=\"location\"\r\n                    >\r\n                        <option value=\"Hawaii\">Hawaii</option>\r\n                        <option value=\"Los Mochis\">Los Mochis</option>\r\n                        <option value=\"Monterrey\">Monterrey</option>\r\n                    </select>\r\n                    <br />\r\n                    \r\n                    {/* Create check boxes for dietary restrictions here */}\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"isVegetarian\"\r\n                        checked={this.state.isVegetarian}\r\n                        onChange={this.handleChange}\r\n                    />Vegetarian\r\n                    <br />\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"isLactoseIntolerant\"\r\n                        checked={this.state.isLactoseIntolerant}\r\n                        onChange={this.handleChange}\r\n                    />Lactose Intolerant\r\n                    <br />\r\n                    <button>Submit</button>\r\n                </form>\r\n                <hr />\r\n                <h2>Entered information:</h2>\r\n                <p>Your name: {this.state.firstName} {this.state.lastName}</p>\r\n                <p>Your age: {this.state.Age}</p>\r\n                <p>Your gender: {this.state.gender}</p>\r\n                <p>Your destination: {this.state.location}</p>\r\n                <p>\r\n                    Your dietary restrictions: \r\n                    {/* Dietary restrictions here, comma separated */}\r\n                    {restrictions.split(',')} \r\n                </p>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","// import React, {useState, useEffect} from 'react';\r\n// import {Helmet} from 'fusion-plugin-react-helmet-async';\r\n// import fetch from 'isomorphic-fetch';\r\n\r\n// const Root = () => {\r\n//   const [todos, setTodos] = useState([]);\r\n//   const [inputText, setInputText] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     fetch('/api/todos')\r\n//       .then(async res => await res.json())\r\n//       .then(res => setTodos(res));\r\n//   }, []);\r\n\r\n//   const handleOnKeydown = (e) => {\r\n//     if (e.key === 'Enter') {\r\n//       setInputText('');\r\n//       setTodos([\r\n//         ...todos,\r\n//         inputText\r\n//       ]);\r\n//       fetch('/api/todos', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({value: inputText}),\r\n//       });\r\n//     }\r\n//   };\r\n\r\n//   const handleOnChange = (e) => {\r\n//     setInputText(e.currentTarget.value);\r\n//   };\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//         <Helmet>\r\n//       <style>\r\n//       {`\r\n//         body {\r\n//           background-color: #f5f5f5;\r\n//           font: 24px 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n//         }\r\n//         h1 {\r\n//           color: rgba(175, 47, 47, 0.15);\r\n//           font-size: 100px;\r\n//           font-weight: 100;\r\n//           text-align: center;\r\n//         }\r\n//         .container {\r\n//           background: #ffffff;\r\n//           border: 1px solid #ededed;\r\n//           margin: 0 auto;\r\n//           width: 550px;\r\n//         }\r\n//         input {\r\n//           border: none;\r\n//           font-size: 24px;\r\n//           font-weight: 300;\r\n//           padding: 15px;\r\n//           width: 520px;\r\n//         }\r\n//         input::placeholder {\r\n//           color: #e6e6e6;\r\n//           font-style: italic;\r\n//           font-weight: 100;\r\n//         }\r\n//         .todo {\r\n//           border-top: 1px solid #ededed;\r\n//           padding: 15px;\r\n//         }\r\n//         .todo-text {\r\n//           font-weight: 300;\r\n//         }\r\n//       `}\r\n//       </style>\r\n//     </Helmet>\r\n//       <h1>todos</h1>\r\n//       <div className=\"container\">\r\n//         <input\r\n//           onChange={handleOnChange}\r\n//           onKeyDown={handleOnKeydown}\r\n//           placeholder=\"What needs to be done?\"\r\n//           value={inputText}\r\n//           type=\"text\"\r\n//         />\r\n//         {todos.map(todo => (\r\n//           <div className=\"todo\">\r\n//             <div className=\"todo-text\">{todo}</div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\nimport React from 'react'\r\nimport App from './App'\r\n\r\nfunction Root(){\r\n  return (\r\n    <App />\r\n  )\r\n}\r\n\r\nexport default <Root />;","import App from 'fusion-react';\r\nimport Root from './components/root';\r\nimport TodosPlugin from './plugins/todos';\r\n// styling\r\nimport HelmetPlugin from 'fusion-plugin-react-helmet-async';\r\n\r\nexport default async function start() {\r\n  const app = new App(Root);\r\n  if (__NODE__) {\r\n    app.middleware(require('koa-bodyparser')());\r\n    app.middleware(TodosPlugin);\r\n  }\r\n  app.register(HelmetPlugin);\r\n  return app;\r\n}","const todos = ['Buy milk', 'Walk dog'];\r\n\r\nexport default async (ctx, next) => {\r\n  if (ctx.path === '/api/todos') {\r\n    if (ctx.method === 'GET') {\r\n      ctx.response.body = todos;\r\n    } else if (ctx.method === 'POST') {\r\n      const {value} = ctx.request.body;\r\n      todos.push(value);\r\n      ctx.response.status = 201;\r\n    }\r\n  }\r\n  await next();\r\n};"],"mappings":";;;;;;;;;;;;;;AAAA;AAEA;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AA7GA;AACA;AA8GA;;;;;;;;;;;;;;;;;AChIA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA,eAGA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;ACdA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;A","sourceRoot":""}